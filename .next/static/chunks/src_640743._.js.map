{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/mui-theme/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\nexport const theme = createTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#046af2\",\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#06D001\",\r\n\t\t},\r\n\t},\r\n});\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIO,MAAM,QAAQ,CAAA,GAAA,uNAAA,CAAA,cAAW,AAAD,EAAE;IAChC,SAAS;QACR,SAAS;YACR,MAAM;QACP;QACA,WAAW;YACV,MAAM;QACP;IACD;AACD"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/mui-theme-provider/index.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React from \"react\";\r\nimport { ThemeProvider, CssBaseline } from \"@mui/material\";\r\nimport { theme } from \"../mui-theme\";\r\n\r\nexport function MUIThemeProvider({\r\n\tchildren,\r\n}: {\r\n\tchildren: React.ReactNode;\r\n}) {\r\n\treturn (\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t{children}\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AADA;AAAA;AAHA;;;;AAMO,SAAS,iBAAiB,EAChC,QAAQ,EAGR;IACA,qBACC,6LAAC,2MAAA,CAAA,gBAAa;QAAC,OAAO,gKAAA,CAAA,QAAK;;0BAC1B,6LAAC,4MAAA,CAAA,cAAW;;;;;YACX;;;;;;;AAGJ;KAXgB"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/redux/api-slices/post/index.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const postApi = createApi({\r\n\treducerPath: \"postApi\",\r\n\tbaseQuery: fetchBaseQuery({\r\n\t\tbaseUrl: process.env.NEXT_PUBLIC_BASE_URL,\r\n\t}),\r\n\tendpoints: (builder) => ({\r\n\t\tlogin: builder.mutation({\r\n\t\t\tquery: (credentials) => ({\r\n\t\t\t\turl: \"api/login\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: { email: credentials.email, password: credentials.password },\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tsignup: builder.mutation({\r\n\t\t\tquery: (credentials) => ({\r\n\t\t\t\turl: \"/api/signup\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\temail: credentials.email,\r\n\t\t\t\t\tpassword: credentials.password,\r\n\t\t\t\t\tname: credentials.name,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tlogout: builder.mutation<void, void>({\r\n\t\t\tquery: () => ({\r\n\t\t\t\turl: \"api/logout\",\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tfetchPublicPostsData: builder.query<{ data: Array<PostInterface> }, void>({\r\n\t\t\tquery: () => \"api/get-all-posts\",\r\n\t\t}),\r\n\t\tuploadImageToCloudinary: builder.mutation({\r\n\t\t\tquery: (formData) => ({\r\n\t\t\t\turl: \"https://chat-along-external-server.onrender.com/upload-to-cloudinary\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: formData,\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tdeleteImageFromCloudinary: builder.mutation({\r\n\t\t\tquery: (public_id: string) => ({\r\n\t\t\t\turl: \"https://chat-along-external-server.onrender.com/delete-from-cloudinary\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: { public_id },\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tcreatePost: builder.mutation({\r\n\t\t\tquery: (postObj: {\r\n\t\t\t\tpost_image: { image_url: string; public_id: string };\r\n\t\t\t\tcaption: string;\r\n\t\t\t\tdate: string;\r\n\t\t\t}) => ({\r\n\t\t\t\turl: \"api/create-post\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpost_image: postObj.post_image,\r\n\t\t\t\t\tcaption: postObj.caption,\r\n\t\t\t\t\tdate: postObj.date,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tupdateLink: builder.mutation({\r\n\t\t\tquery: (updatedLinkObj: {\r\n\t\t\t\turl: string;\r\n\t\t\t\tfullname: string;\r\n\t\t\t\tid: string;\r\n\t\t\t\tlinkColor: string;\r\n\t\t\t}) => ({\r\n\t\t\t\turl: \"api/update-link\",\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\turl: updatedLinkObj.url,\r\n\t\t\t\t\tfullname: updatedLinkObj.fullname,\r\n\t\t\t\t\tid: updatedLinkObj.id,\r\n\t\t\t\t\tlinkColor: updatedLinkObj.linkColor,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tdeletePost: builder.mutation({\r\n\t\t\tquery: (postId: string) => ({\r\n\t\t\t\turl: `api/delete-post`,\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpostId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tlikeUnlikePost: builder.mutation({\r\n\t\t\tquery: (postId: string) => ({\r\n\t\t\t\turl: `api/like-unlike-post`,\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpostId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tcommentPost: builder.mutation({\r\n\t\t\tquery: (data: { postId: string; comment: string }) => ({\r\n\t\t\t\turl: `api/comment-post`,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tpostId: data.postId,\r\n\t\t\t\t\tcomment: data.comment,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t}),\r\n});\r\n\r\nexport const {\r\n\tuseFetchPublicPostsDataQuery,\r\n\tuseLikeUnlikePostMutation,\r\n\tuseCommentPostMutation,\r\n\tuseLoginMutation,\r\n\tuseSignupMutation,\r\n\tuseLogoutMutation,\r\n\tuseUploadImageToCloudinaryMutation,\r\n\tuseDeleteImageFromCloudinaryMutation,\r\n\tuseCreatePostMutation,\r\n\tuseUpdateLinkMutation,\r\n\tuseDeletePostMutation,\r\n} = postApi;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;AAKW;;AAHJ,MAAM,UAAU,CAAA,GAAA,qNAAA,CAAA,YAAS,AAAD,EAAE;IAChC,aAAa;IACb,WAAW,CAAA,GAAA,mLAAA,CAAA,iBAAc,AAAD,EAAE;QACzB,OAAO;IACR;IACA,WAAW,CAAC,UAAY,CAAC;YACxB,OAAO,QAAQ,QAAQ,CAAC;gBACvB,OAAO,CAAC,cAAgB,CAAC;wBACxB,KAAK;wBACL,QAAQ;wBACR,MAAM;4BAAE,OAAO,YAAY,KAAK;4BAAE,UAAU,YAAY,QAAQ;wBAAC;oBAClE,CAAC;YACF;YACA,QAAQ,QAAQ,QAAQ,CAAC;gBACxB,OAAO,CAAC,cAAgB,CAAC;wBACxB,KAAK;wBACL,QAAQ;wBACR,MAAM;4BACL,OAAO,YAAY,KAAK;4BACxB,UAAU,YAAY,QAAQ;4BAC9B,MAAM,YAAY,IAAI;wBACvB;oBACD,CAAC;YACF;YACA,QAAQ,QAAQ,QAAQ,CAAa;gBACpC,OAAO,IAAM,CAAC;wBACb,KAAK;wBACL,QAAQ;oBACT,CAAC;YACF;YACA,sBAAsB,QAAQ,KAAK,CAAuC;gBACzE,OAAO,IAAM;YACd;YACA,yBAAyB,QAAQ,QAAQ,CAAC;gBACzC,OAAO,CAAC,WAAa,CAAC;wBACrB,KAAK;wBACL,QAAQ;wBACR,MAAM;oBACP,CAAC;YACF;YACA,2BAA2B,QAAQ,QAAQ,CAAC;gBAC3C,OAAO,CAAC,YAAsB,CAAC;wBAC9B,KAAK;wBACL,QAAQ;wBACR,MAAM;4BAAE;wBAAU;oBACnB,CAAC;YACF;YACA,YAAY,QAAQ,QAAQ,CAAC;gBAC5B,OAAO,CAAC,UAIF,CAAC;wBACN,KAAK;wBACL,QAAQ;wBACR,MAAM;4BACL,YAAY,QAAQ,UAAU;4BAC9B,SAAS,QAAQ,OAAO;4BACxB,MAAM,QAAQ,IAAI;wBACnB;oBACD,CAAC;YACF;YACA,YAAY,QAAQ,QAAQ,CAAC;gBAC5B,OAAO,CAAC,iBAKF,CAAC;wBACN,KAAK;wBACL,QAAQ;wBACR,MAAM;4BACL,KAAK,eAAe,GAAG;4BACvB,UAAU,eAAe,QAAQ;4BACjC,IAAI,eAAe,EAAE;4BACrB,WAAW,eAAe,SAAS;wBACpC;oBACD,CAAC;YACF;YACA,YAAY,QAAQ,QAAQ,CAAC;gBAC5B,OAAO,CAAC,SAAmB,CAAC;wBAC3B,KAAK,CAAC,eAAe,CAAC;wBACtB,QAAQ;wBACR,MAAM;4BACL;wBACD;oBACD,CAAC;YACF;YACA,gBAAgB,QAAQ,QAAQ,CAAC;gBAChC,OAAO,CAAC,SAAmB,CAAC;wBAC3B,KAAK,CAAC,oBAAoB,CAAC;wBAC3B,QAAQ;wBACR,MAAM;4BACL;wBACD;oBACD,CAAC;YACF;YACA,aAAa,QAAQ,QAAQ,CAAC;gBAC7B,OAAO,CAAC,OAA8C,CAAC;wBACtD,KAAK,CAAC,gBAAgB,CAAC;wBACvB,QAAQ;wBACR,MAAM;4BACL,QAAQ,KAAK,MAAM;4BACnB,SAAS,KAAK,OAAO;wBACtB;oBACD,CAAC;YACF;QACD,CAAC;AACF;AAEO,MAAM,EACZ,4BAA4B,EAC5B,yBAAyB,EACzB,sBAAsB,EACtB,gBAAgB,EAChB,iBAAiB,EACjB,iBAAiB,EACjB,kCAAkC,EAClC,oCAAoC,EACpC,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,EACrB,GAAG"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/redux/slices/post/index.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface InitialStateInterface {\r\n\tpostsData: Array<PostInterface>;\r\n\tloading: boolean;\r\n}\r\n\r\nconst initialState: InitialStateInterface = {\r\n\tpostsData: [],\r\n\tloading: false,\r\n};\r\n\r\nexport const postSlice = createSlice({\r\n\tname: \"Post\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tstorePublicPostDataInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<Array<PostInterface>>\r\n\t\t) => {\r\n\t\t\tstate.postsData = action.payload;\r\n\t\t},\r\n\t\tdeletePostFromState: (state, action: PayloadAction<string>) => {\r\n\t\t\tstate.postsData = state.postsData.filter(\r\n\t\t\t\t(post) => post._id !== action.payload\r\n\t\t\t);\r\n\t\t},\r\n\t\tlikeUnlikePostInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{\r\n\t\t\t\tlikesDetails: PostLikesInterface;\r\n\t\t\t\tpostId: string;\r\n\t\t\t}>\r\n\t\t) => {\r\n\t\t\tconst foundPost = state.postsData.find(\r\n\t\t\t\t(post) => post._id === action.payload.postId\r\n\t\t\t);\r\n\t\t\tconst isLikedByUser = foundPost?.likes?.find(\r\n\t\t\t\t(like) => like._id === action.payload.likesDetails._id\r\n\t\t\t);\r\n\t\t\tif (!isLikedByUser) {\r\n\t\t\t\tfoundPost?.likes?.push({\r\n\t\t\t\t\t_id: action.payload.likesDetails._id,\r\n\t\t\t\t\timage: action.payload.likesDetails.image,\r\n\t\t\t\t\tname: action.payload.likesDetails.name,\r\n\t\t\t\t\tusername: action.payload.likesDetails.username,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst likedByUserIndex = foundPost?.likes?.findIndex(\r\n\t\t\t\t\t(like) => like._id === action.payload.likesDetails._id\r\n\t\t\t\t);\r\n\t\t\t\tstate.postsData\r\n\t\t\t\t\t.find((post) => post._id === action.payload.postId)\r\n\t\t\t\t\t?.likes?.splice(likedByUserIndex || 0, 1);\r\n\t\t\t}\r\n\t\t},\r\n\t\tcommentPostInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{\r\n\t\t\t\tcommentDetails: PostCommentsInterface;\r\n\t\t\t\tpostId: string;\r\n\t\t\t}>\r\n\t\t) => {\r\n\t\t\tconst foundPost = state.postsData.find(\r\n\t\t\t\t(post) => post._id === action.payload.postId\r\n\t\t\t);\r\n\t\t\tfoundPost?.comments?.push({\r\n\t\t\t\tcomment: action.payload.commentDetails.comment,\r\n\t\t\t\tuserId: {\r\n\t\t\t\t\tname: action.payload.commentDetails.userId.name,\r\n\t\t\t\t\t_id: action.payload.commentDetails.userId._id,\r\n\t\t\t\t\tusername: action.payload.commentDetails.userId.username,\r\n\t\t\t\t\timage: action.payload.commentDetails.userId.image,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t},\r\n\t\tchangeLoadingState: (state, action: PayloadAction<boolean>) => {\r\n\t\t\tstate.loading = action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tstorePublicPostDataInState,\r\n\tchangeLoadingState,\r\n\tdeletePostFromState,\r\n\tlikeUnlikePostInState,\r\n\tcommentPostInState,\r\n} = postSlice.actions;\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAOA,MAAM,eAAsC;IAC3C,WAAW,EAAE;IACb,SAAS;AACV;AAEO,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACpC,MAAM;IACN;IACA,UAAU;QACT,4BAA4B,CAC3B,OACA;YAEA,MAAM,SAAS,GAAG,OAAO,OAAO;QACjC;QACA,qBAAqB,CAAC,OAAO;YAC5B,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC,MAAM,CACvC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO;QAEvC;QACA,uBAAuB,CACtB,OACA;YAKA,MAAM,YAAY,MAAM,SAAS,CAAC,IAAI,CACrC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,MAAM;YAE7C,MAAM,gBAAgB,WAAW,OAAO,KACvC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,YAAY,CAAC,GAAG;YAEvD,IAAI,CAAC,eAAe;gBACnB,WAAW,OAAO,KAAK;oBACtB,KAAK,OAAO,OAAO,CAAC,YAAY,CAAC,GAAG;oBACpC,OAAO,OAAO,OAAO,CAAC,YAAY,CAAC,KAAK;oBACxC,MAAM,OAAO,OAAO,CAAC,YAAY,CAAC,IAAI;oBACtC,UAAU,OAAO,OAAO,CAAC,YAAY,CAAC,QAAQ;gBAC/C;YACD,OAAO;gBACN,MAAM,mBAAmB,WAAW,OAAO,UAC1C,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,YAAY,CAAC,GAAG;gBAEvD,MAAM,SAAS,CACb,IAAI,CAAC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,MAAM,GAChD,OAAO,OAAO,oBAAoB,GAAG;YACzC;QACD;QACA,oBAAoB,CACnB,OACA;YAKA,MAAM,YAAY,MAAM,SAAS,CAAC,IAAI,CACrC,CAAC,OAAS,KAAK,GAAG,KAAK,OAAO,OAAO,CAAC,MAAM;YAE7C,WAAW,UAAU,KAAK;gBACzB,SAAS,OAAO,OAAO,CAAC,cAAc,CAAC,OAAO;gBAC9C,QAAQ;oBACP,MAAM,OAAO,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI;oBAC/C,KAAK,OAAO,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG;oBAC7C,UAAU,OAAO,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ;oBACvD,OAAO,OAAO,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK;gBAClD;YACD;QACD;QACA,oBAAoB,CAAC,OAAO;YAC3B,MAAM,OAAO,GAAG,OAAO,OAAO;QAC/B;IACD;AACD;AAEO,MAAM,EACZ,0BAA0B,EAC1B,kBAAkB,EAClB,mBAAmB,EACnB,qBAAqB,EACrB,kBAAkB,EAClB,GAAG,UAAU,OAAO"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/store-public-posts/index.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFetchPublicPostsDataQuery } from \"@/redux/api-slices/post\";\r\nimport {\r\n\tchangeLoadingState,\r\n\tstorePublicPostDataInState,\r\n} from \"@/redux/slices/post\";\r\n\r\nexport function StorePublicPosts() {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\tconst { data, isLoading } = useFetchPublicPostsDataQuery();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(changeLoadingState(isLoading));\r\n\t\tif (!isLoading && data) {\r\n\t\t\t\r\n\t\t\tdispatch(storePublicPostDataInState(data.data));\r\n\t\t\tdispatch(changeLoadingState(isLoading));\r\n\t\t}\r\n\t}, [data, isLoading, dispatch]);\r\n\r\n\treturn <></>;\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAFA;;;AAFA;;;;;AASO,SAAS;;IACf,QAAQ;IACR,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kJAAA,CAAA,+BAA4B,AAAD;IAEvD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACT,SAAS,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;YAC5B,IAAI,CAAC,aAAa,MAAM;gBAEvB,SAAS,CAAA,GAAA,2IAAA,CAAA,6BAA0B,AAAD,EAAE,KAAK,IAAI;gBAC7C,SAAS,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;YAC7B;QACD;qCAAG;QAAC;QAAM;QAAW;KAAS;IAE9B,qBAAO;AACR;GAfgB;;QAEE,4JAAA,CAAA,cAAW;QACA,kJAAA,CAAA,+BAA4B;;;KAHzC"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/redux/api-slices/user/index.tsx"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport const usersApi = createApi({\r\n\treducerPath: \"usersApi\",\r\n\tbaseQuery: fetchBaseQuery({\r\n\t\tbaseUrl: process.env.NEXT_PUBLIC_BASE_URL,\r\n\t}),\r\n\tendpoints: (builder) => ({\r\n\t\tlogin: builder.mutation({\r\n\t\t\tquery: (data: { username: string; password: string }) => ({\r\n\t\t\t\turl: \"api/login\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: { username: data.username, password: data.password },\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tcheckEmailInDB: builder.mutation({\r\n\t\t\tquery: (email: string) => ({\r\n\t\t\t\turl: \"api/check-email\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: { email },\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tcheckUsernameInDB: builder.mutation({\r\n\t\t\tquery: (data: {\r\n\t\t\t\tfirstName: string;\r\n\t\t\t\tphone: string;\r\n\t\t\t\tusername: string;\r\n\t\t\t}) => ({\r\n\t\t\t\turl: \"api/check-username\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tfirstName: data.firstName,\r\n\t\t\t\t\tphone: data.phone,\r\n\t\t\t\t\tusername: data.username,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tsignup: builder.mutation({\r\n\t\t\tquery: (data: {\r\n\t\t\t\temail: string;\r\n\t\t\t\tpassword: string;\r\n\t\t\t\tname: string;\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t\tusername: string;\r\n\t\t\t\tphone: string;\r\n\t\t\t}) => ({\r\n\t\t\t\turl: \"/api/signup\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\temail: data.email,\r\n\t\t\t\t\tpassword: data.password,\r\n\t\t\t\t\tname: data.name,\r\n\t\t\t\t\timage: data.image,\r\n\t\t\t\t\tusername: data.username,\r\n\t\t\t\t\tphone: data.phone,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tlogout: builder.mutation<void, void>({\r\n\t\t\tquery: () => ({\r\n\t\t\t\turl: \"api/logout\",\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tfetchUserData: builder.query<{ data: UserResponseDataInterface }, void>({\r\n\t\t\tquery: () => \"api/get-user-profile\",\r\n\t\t}),\r\n\t\tfetchAllUsersData: builder.query<\r\n\t\t\t{ data: Array<UserResponseDataInterface> },\r\n\t\t\tvoid\r\n\t\t>({\r\n\t\t\tquery: () => \"api/get-all-users\",\r\n\t\t}),\r\n\t\tfollowUnfollowUser: builder.mutation({\r\n\t\t\tquery: (userId: string) => ({\r\n\t\t\t\turl: `api/follow-unfollow-user`,\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tuserId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\taddStatus: builder.mutation({\r\n\t\t\tquery: (data: {\r\n\t\t\t\tstatusContent: string;\r\n\t\t\t\tcolorName: string;\r\n\t\t\t\tcolorCode: string;\r\n\t\t\t}) => ({\r\n\t\t\t\turl: \"api/add-status\",\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tstatusContent: data.statusContent,\r\n\t\t\t\t\tcolorCode: data.colorCode,\r\n\t\t\t\t\tcolorName: data.colorName,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\teditProfile: builder.mutation({\r\n\t\t\tquery: (data: {\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t\tname: string;\r\n\t\t\t\temail: string;\r\n\t\t\t\tphone: string;\r\n\t\t\t}) => ({\r\n\t\t\t\turl: \"api/edit-user-profile\",\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\timage: data.image,\r\n\t\t\t\t\tname: data.name,\r\n\t\t\t\t\temail: data.email,\r\n\t\t\t\t\tphone: data.phone,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tdeleteStatus: builder.mutation({\r\n\t\t\tquery: (statusId) => ({\r\n\t\t\t\turl: `api/delete-status`,\r\n\t\t\t\tmethod: \"DELETE\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tstatusId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tsaveMessage: builder.mutation({\r\n\t\t\tquery: (data: {\r\n\t\t\t\treceiverId: string;\r\n\t\t\t\ttime: string;\r\n\t\t\t\tmessage: string;\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t}) => ({\r\n\t\t\t\turl: `api/save-message`,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\treceiverId: data.receiverId,\r\n\t\t\t\t\ttime: data.time,\r\n\t\t\t\t\timage: data.image,\r\n\t\t\t\t\tmessage: data.message,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tclearMessages: builder.mutation({\r\n\t\t\tquery: (receiverId: string) => ({\r\n\t\t\t\turl: `api/clear-messages`,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\treceiverId,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tsaveNotification: builder.mutation({\r\n\t\t\tquery: (data: {\r\n\t\t\t\taction: string;\r\n\t\t\t\tlink: string;\r\n\t\t\t\tsenderName: string;\r\n\t\t\t\treceiverId: string;\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t}) => ({\r\n\t\t\t\turl: `api/save-notification`,\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\tbody: {\r\n\t\t\t\t\treceiverId: data.receiverId,\r\n\t\t\t\t\tlink: data.link,\r\n\t\t\t\t\timage: data.image,\r\n\t\t\t\t\tsenderName: data.senderName,\r\n\t\t\t\t\taction: data.action,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tclearNotifications: builder.mutation<void, void>({\r\n\t\t\tquery: () => ({\r\n\t\t\t\turl: `api/clear-notifications`,\r\n\t\t\t\tmethod: \"PUT\",\r\n\t\t\t}),\r\n\t\t}),\r\n\t}),\r\n});\r\n\r\nexport const {\r\n\tuseFetchUserDataQuery,\r\n\tuseFetchAllUsersDataQuery,\r\n\tuseLoginMutation,\r\n\tuseCheckEmailInDBMutation,\r\n\tuseCheckUsernameInDBMutation,\r\n\tuseSignupMutation,\r\n\tuseLogoutMutation,\r\n\tuseFollowUnfollowUserMutation,\r\n\tuseAddStatusMutation,\r\n\tuseEditProfileMutation,\r\n\tuseDeleteStatusMutation,\r\n\tuseSaveMessageMutation,\r\n\tuseClearMessagesMutation,\r\n\tuseSaveNotificationMutation,\r\n\tuseClearNotificationsMutation,\r\n} = usersApi;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/redux/slices/user/index.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface InitialStateInterface {\r\n\tuserData: UserResponseDataInterface;\r\n\tallUsersData: Array<UserResponseDataInterface>;\r\n\tloading: boolean;\r\n\tisAuthenticated: boolean;\r\n\tisDialogOpened: boolean;\r\n}\r\n\r\nconst initialState: InitialStateInterface = {\r\n\tuserData: {},\r\n\tallUsersData: [],\r\n\tloading: true,\r\n\tisAuthenticated: false,\r\n\tisDialogOpened: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n\tname: \"Users\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tstoreUserDataInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<UserResponseDataInterface>\r\n\t\t) => {\r\n\t\t\tstate.userData = action.payload;\r\n\t\t},\r\n\t\tstoreAllUsersDataInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<Array<UserResponseDataInterface>>\r\n\t\t) => {\r\n\t\t\tstate.allUsersData = action.payload;\r\n\t\t},\r\n\t\tfollowUnfollowUserInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{\r\n\t\t\t\t_id: string;\r\n\t\t\t\tname: string;\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t\tusername: string;\r\n\t\t\t}>\r\n\t\t) => {\r\n\t\t\t// Checking if user already followed then unfollow\r\n\t\t\tconst alreadyFollowing = state.userData.following?.find(\r\n\t\t\t\t(user) => user._id === action.payload._id\r\n\t\t\t);\r\n\t\t\tconst matchedUser = state.allUsersData.find(\r\n\t\t\t\t(user) => user._id === action.payload._id\r\n\t\t\t);\r\n\r\n\t\t\tif (alreadyFollowing) {\r\n\t\t\t\t// First person\r\n\t\t\t\tconst followingIndex = state.userData.following?.findIndex(\r\n\t\t\t\t\t(user) => user._id === action.payload._id\r\n\t\t\t\t);\r\n\t\t\t\tstate.userData.following?.splice(Number(followingIndex), 1);\r\n\r\n\t\t\t\t// Second person\r\n\t\t\t\tconst followerIndex = matchedUser?.followers?.find(\r\n\t\t\t\t\t(user) => user._id === state.userData._id\r\n\t\t\t\t);\r\n\t\t\t\tmatchedUser?.followers?.splice(Number(followerIndex), 1);\r\n\t\t\t} else {\r\n\t\t\t\t// First person\r\n\t\t\t\tstate.userData.following?.push({\r\n\t\t\t\t\t_id: action.payload._id,\r\n\t\t\t\t\tname: action.payload.name,\r\n\t\t\t\t\timage: action.payload.image,\r\n\t\t\t\t\tusername: action.payload.username,\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Second person\r\n\t\t\t\tmatchedUser?.followers?.push({\r\n\t\t\t\t\t_id: state.userData._id || \"\",\r\n\t\t\t\t\tname: state.userData.name || \"\",\r\n\t\t\t\t\timage: state.userData.image || { image_url: \"\", public_id: \"\" },\r\n\t\t\t\t\tusername: state.userData.username || \"\",\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\thandleAuthentication: (state, action: PayloadAction<boolean>) => {\r\n\t\t\tstate.isAuthenticated = action.payload;\r\n\t\t},\r\n\t\thandleDialog: (state, action: PayloadAction<boolean>) => {\r\n\t\t\tstate.isDialogOpened = action.payload;\r\n\t\t},\r\n\t\tchangeLoadingState: (state, action: PayloadAction<boolean>) => {\r\n\t\t\tstate.loading = action.payload;\r\n\t\t},\r\n\t\tsendMessageInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{\r\n\t\t\t\treceiverId: string;\r\n\t\t\t\ttime: string;\r\n\t\t\t\tmessage: string;\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t}>\r\n\t\t) => {\r\n\t\t\tif (!state.userData.chats) {\r\n\t\t\t\tstate.userData.chats = {}; // Initialize chats as an empty object\r\n\t\t\t}\r\n\t\t\tif (!state.userData.chats?.[action.payload.receiverId]) {\r\n\t\t\t\tstate.userData.chats[action.payload.receiverId] = [];\r\n\t\t\t}\r\n\r\n\t\t\tstate.userData.chats?.[action.payload.receiverId].push({\r\n\t\t\t\tmessage: action.payload.message,\r\n\t\t\t\timage: action.payload.image,\r\n\t\t\t\ttime: action.payload.time,\r\n\t\t\t\tname: \"sender\",\r\n\t\t\t\tseen: false,\r\n\t\t\t});\r\n\t\t},\r\n\t\treceiveMessageInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<{\r\n\t\t\t\tsenderId: string;\r\n\t\t\t\ttime: string;\r\n\t\t\t\tmessage: string;\r\n\t\t\t\timage: { image_url: string; public_id: string };\r\n\t\t\t}>\r\n\t\t) => {\r\n\t\t\tif (!state.userData.chats) {\r\n\t\t\t\tstate.userData.chats = {}; // Initialize chats as an empty object\r\n\t\t\t}\r\n\t\t\tif (!state.userData.chats?.[action.payload.senderId]) {\r\n\t\t\t\tstate.userData.chats[action.payload.senderId] = [];\r\n\t\t\t}\r\n\t\t\tstate.userData.chats?.[action.payload.senderId].push({\r\n\t\t\t\tmessage: action.payload.message,\r\n\t\t\t\timage: action.payload.image,\r\n\t\t\t\ttime: action.payload.time,\r\n\t\t\t\tname: \"receiver\",\r\n\t\t\t\tseen: false,\r\n\t\t\t});\r\n\t\t},\r\n\t\tclearMessagesInState: (state, action: PayloadAction<string>) => {\r\n\t\t\tif (!state.userData.chats) {\r\n\t\t\t\tstate.userData.chats = {}; // Initialize chats as an empty object\r\n\t\t\t}\r\n\t\t\tif (!state.userData.chats?.[action.payload]) {\r\n\t\t\t\tstate.userData.chats[action.payload] = [];\r\n\t\t\t}\r\n\t\t\tstate.userData.chats[action.payload] = [];\r\n\t\t},\r\n\t\treceiveNotificationInState: (\r\n\t\t\tstate,\r\n\t\t\taction: PayloadAction<NotificationInterface>\r\n\t\t) => {\r\n\t\t\tif (!state.userData.notifications) {\r\n\t\t\t\tstate.userData.notifications = [];\r\n\t\t\t}\r\n\t\t\tstate.userData.notifications.push({\r\n\t\t\t\tname: action.payload.name,\r\n\t\t\t\timage: action.payload.image,\r\n\t\t\t\taction: action.payload.action,\r\n\t\t\t\tlink: action.payload.link,\r\n\t\t\t});\r\n\t\t},\r\n\t\tclearNotificationsInState: (state) => {\r\n\t\t\tstate.userData.notifications = [];\r\n\t\t},\r\n\t\tseenMessageInState: (state, action: PayloadAction<string>) => {\r\n\t\t\tconst userId = action.payload;\r\n\t\t\tif (state.userData.chats?.[userId]) {\r\n\t\t\t\tstate.userData.chats[userId][\r\n\t\t\t\t\tstate.userData.chats[userId].length - 1\r\n\t\t\t\t].seen = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\taddStatusInState: (state, action: PayloadAction<StatusInterface>) => {\r\n\t\t\tif (state.userData.status) {\r\n\t\t\t\tstate?.userData?.status.push({\r\n\t\t\t\t\tstatusContent: action.payload.statusContent,\r\n\t\t\t\t\tcolorCode: action.payload.colorCode,\r\n\t\t\t\t\tcolorName: action.payload.colorName,\r\n\t\t\t\t\t_id: String(state.userData.status?.length + 1),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tdeleteStatusInState: (state, action: PayloadAction<string>) => {\r\n\t\t\tif (state.userData.status) {\r\n\t\t\t\tconst indexOfStatus = state.userData.status.findIndex(\r\n\t\t\t\t\t(status) => status._id === action.payload\r\n\t\t\t\t);\r\n\r\n\t\t\t\tstate.userData.status.splice(Number(indexOfStatus), 1);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {\r\n\tstoreUserDataInState,\r\n\tstoreAllUsersDataInState,\r\n\tfollowUnfollowUserInState,\r\n\thandleAuthentication,\r\n\thandleDialog,\r\n\tsendMessageInState,\r\n\treceiveMessageInState,\r\n\tclearMessagesInState,\r\n\treceiveNotificationInState,\r\n\tclearNotificationsInState,\r\n\taddStatusInState,\r\n\tdeleteStatusInState,\r\n\tseenMessageInState,\r\n\tchangeLoadingState,\r\n} = userSlice.actions;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/store-user-data/index.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFetchUserDataQuery } from \"@/redux/api-slices\";\r\nimport {\r\n\tchangeLoadingState,\r\n\tstoreUserDataInState,\r\n\thandleAuthentication,\r\n} from \"@/redux/slices/user\";\r\n\r\nexport function StoreUserData() {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\tconst { data, isLoading } = useFetchUserDataQuery();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(changeLoadingState(isLoading));\r\n\t\tif (!isLoading && data) {\r\n\t\t\tif(data.data){\r\n\t\t\t\tdispatch(storeUserDataInState(data.data));\r\n\t\t\t\tdispatch(handleAuthentication(true));\r\n\t\t\t\tdispatch(changeLoadingState(isLoading));\r\n\t\t\t}\r\n\t\t}\r\n\t}, [data, isLoading, dispatch]);\r\n\r\n\treturn <></>;\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAFA;AACA;;;AAHA;;;;;AAUO,SAAS;;IACf,QAAQ;IACR,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kJAAA,CAAA,wBAAqB,AAAD;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACT,SAAS,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;YAC5B,IAAI,CAAC,aAAa,MAAM;gBACvB,IAAG,KAAK,IAAI,EAAC;oBACZ,SAAS,CAAA,GAAA,2IAAA,CAAA,uBAAoB,AAAD,EAAE,KAAK,IAAI;oBACvC,SAAS,CAAA,GAAA,2IAAA,CAAA,uBAAoB,AAAD,EAAE;oBAC9B,SAAS,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;gBAC7B;YACD;QACD;kCAAG;QAAC;QAAM;QAAW;KAAS;IAE9B,qBAAO;AACR;GAjBgB;;QAEE,4JAAA,CAAA,cAAW;QACA,kJAAA,CAAA,wBAAqB;;;KAHlC"}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/store-all-users-data/index.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFetchAllUsersDataQuery } from \"@/redux/api-slices\";\r\nimport {\r\n\tchangeLoadingState,\r\n\tstoreAllUsersDataInState,\r\n} from \"@/redux/slices/user\";\r\n\r\nexport function StoreAllUsersData() {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\tconst { data, isLoading } = useFetchAllUsersDataQuery();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(changeLoadingState(isLoading));\r\n\t\tif (!isLoading && data) {\r\n\t\t\tdispatch(storeAllUsersDataInState(data.data));\r\n\t\t\tdispatch(changeLoadingState(isLoading));\r\n\t\t}\r\n\t}, [data, isLoading, dispatch]);\r\n\r\n\treturn <></>;\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAFA;AACA;;;AAHA;;;;;AASO,SAAS;;IACf,QAAQ;IACR,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kJAAA,CAAA,4BAAyB,AAAD;IAEpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACT,SAAS,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;YAC5B,IAAI,CAAC,aAAa,MAAM;gBACvB,SAAS,CAAA,GAAA,2IAAA,CAAA,2BAAwB,AAAD,EAAE,KAAK,IAAI;gBAC3C,SAAS,CAAA,GAAA,2IAAA,CAAA,qBAAkB,AAAD,EAAE;YAC7B;QACD;sCAAG;QAAC;QAAM;QAAW;KAAS;IAE9B,qBAAO;AACR;GAdgB;;QAEE,4JAAA,CAAA,cAAW;QACA,kJAAA,CAAA,4BAAyB;;;KAHtC"}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/receive-message/index.tsx"],"sourcesContent":["\"use client\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import io from \"socket.io-client\";\r\n// import { receiveMessageInState } from \"@/redux/slices/user\";\r\n// import { Message } from \"./_components\";\r\n// import { RootState } from \"@/redux/store\";\r\n// import { usePathname } from \"next/navigation\";\r\n// import { Snackbar } from \"@mui/material\";\r\n// import { useState } from \"react\";\r\n\r\n// const socket = io(\"https://chat-along-external-server.onrender.com/\", {\r\n// \ttransports: [\"websocket\", \"polling\"],\r\n// });\r\n\r\nexport function ReceiveMessage() {\r\n\t// Hooks\r\n\t// const dispatch = useDispatch();\r\n\t// const { userData, allUsersData } = useSelector(\r\n\t// \t(state: RootState) => state.User\r\n\t// );\r\n\t// const [open, setOpen] = useState(false);\r\n\t// const [senderData, setSenderData] = useState({\r\n\t// \tname: \"\",\r\n\t// \timage: { image_url: \"\", public_id: \"\" },\r\n\t// \tmessage: \"\",\r\n\t// \tid: \"\",\r\n\t// });\r\n\t// const pathname = usePathname();\r\n\r\n\t// socket\r\n\t// \t.off()\r\n\t// \t.on(\r\n\t// \t\t\"receiveMessage\",\r\n\t// \t\t(data: {\r\n\t// \t\t\tsenderId: string;\r\n\t// \t\t\treceiverId: string;\r\n\t// \t\t\tmessage: string;\r\n\t// \t\t\timage: { image_url: string; public_id: string };\r\n\t// \t\t\ttime: string;\r\n\t// \t\t}) => {\r\n\t// \t\t\tif (data.receiverId === userData._id) {\r\n\t// \t\t\t\tif (!pathname.startsWith(\"/chats/\")) {\r\n\t// \t\t\t\t\tconst senderName = allUsersData.find(\r\n\t// \t\t\t\t\t\t(user) => user._id === data.senderId\r\n\t// \t\t\t\t\t)?.name;\r\n\t// \t\t\t\t\tsetSenderData({\r\n\t// \t\t\t\t\t\tname: senderName || \"\",\r\n\t// \t\t\t\t\t\timage: data.image,\r\n\t// \t\t\t\t\t\tmessage: data.message,\r\n\t// \t\t\t\t\t\tid: data.senderId,\r\n\t// \t\t\t\t\t});\r\n\t// \t\t\t\t\tsetOpen(true);\r\n\t// \t\t\t\t}\r\n\t// \t\t\t\tdispatch(\r\n\t// \t\t\t\t\treceiveMessageInState({\r\n\t// \t\t\t\t\t\tsenderId: data.senderId,\r\n\t// \t\t\t\t\t\timage: data.image,\r\n\t// \t\t\t\t\t\ttime: data.time,\r\n\t// \t\t\t\t\t\tmessage: data.message,\r\n\t// \t\t\t\t\t})\r\n\t// \t\t\t\t);\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t);\r\n\r\n\t// const closeSnackbar = () => {\r\n\t// \tsetOpen(false);\r\n\t// };\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* <Snackbar\r\n\t\t\t\tsx={{ width: \"80%\" }}\r\n\t\t\t\topen={open}\r\n\t\t\t\t// onClose={closeSnackbar}\r\n\t\t\t\tautoHideDuration={10000}\r\n\t\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n\t\t\t\tmessage={\r\n\t\t\t\t\t<Message\r\n\t\t\t\t\t\tsenderName={senderData.name}\r\n\t\t\t\t\t\tsenderImage={senderData.image}\r\n\t\t\t\t\t\tmessage={senderData.message}\r\n\t\t\t\t\t\tcloseSnackbar={closeSnackbar}\r\n\t\t\t\t\t\tuserId={senderData.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t/> */}\r\n\t\t</>\r\n\t);\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAcO,SAAS;IACf,QAAQ;IACR,kCAAkC;IAClC,kDAAkD;IAClD,oCAAoC;IACpC,KAAK;IACL,2CAA2C;IAC3C,iDAAiD;IACjD,aAAa;IACb,4CAA4C;IAC5C,gBAAgB;IAChB,WAAW;IACX,MAAM;IACN,kCAAkC;IAElC,SAAS;IACT,UAAU;IACV,QAAQ;IACR,sBAAsB;IACtB,aAAa;IACb,uBAAuB;IACvB,yBAAyB;IACzB,sBAAsB;IACtB,sDAAsD;IACtD,mBAAmB;IACnB,YAAY;IACZ,6CAA6C;IAC7C,6CAA6C;IAC7C,6CAA6C;IAC7C,6CAA6C;IAC7C,gBAAgB;IAChB,uBAAuB;IACvB,gCAAgC;IAChC,2BAA2B;IAC3B,+BAA+B;IAC/B,2BAA2B;IAC3B,WAAW;IACX,sBAAsB;IACtB,QAAQ;IACR,gBAAgB;IAChB,+BAA+B;IAC/B,iCAAiC;IACjC,2BAA2B;IAC3B,yBAAyB;IACzB,+BAA+B;IAC/B,UAAU;IACV,SAAS;IACT,OAAO;IACP,MAAM;IACN,MAAM;IAEN,gCAAgC;IAChC,mBAAmB;IACnB,KAAK;IACL,qBACC;AAmBF;KA1EgB"}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/app/_components/client/receive-notification/index.tsx"],"sourcesContent":["\"use client\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import io from \"socket.io-client\";\r\n// import { receiveNotificationInState } from \"@/redux/slices/user\";\r\n// import { RootState } from \"@/redux/store\";\r\n\r\n// const socket = io(\"https://chat-along-external-server.onrender.com/\", {\r\n// \ttransports: [\"websocket\", \"polling\"],\r\n// });\r\n\r\nexport function ReceiveNotification() {\r\n\t// Hooks\r\n\t// const dispatch = useDispatch();\r\n\t// const { userData } = useSelector((state: RootState) => state.User);\r\n\r\n\t// socket\r\n\t// \t.off()\r\n\t// \t.on(\r\n\t// \t\t\"receiveNotification\",\r\n\t// \t\t(data: {\r\n\t// \t\t\tsenderId: string;\r\n\t// \t\t\tsenderImage: { image_url: string; public_id: string };\r\n\t// \t\t\tsenderName: string;\r\n\t// \t\t\treceiverId: string;\r\n\t// \t\t\taction: string;\r\n\t// \t\t\tlink: string;\r\n\t// \t\t}) => {\r\n\t// \t\t\tif (\r\n\t// \t\t\t\tdata.receiverId === userData._id &&\r\n\t// \t\t\t\tdata.senderId !== data.receiverId\r\n\t// \t\t\t) {\r\n\t// \t\t\t\tdispatch(\r\n\t// \t\t\t\t\treceiveNotificationInState({\r\n\t// \t\t\t\t\t\tname: data.senderName,\r\n\t// \t\t\t\t\t\timage: data.senderImage,\r\n\t// \t\t\t\t\t\taction: data.action,\r\n\t// \t\t\t\t\t\tlink: data.link,\r\n\t// \t\t\t\t\t})\r\n\t// \t\t\t\t);\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t);\r\n\r\n\treturn <></>;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAUO,SAAS;IACf,QAAQ;IACR,kCAAkC;IAClC,sEAAsE;IAEtE,SAAS;IACT,UAAU;IACV,QAAQ;IACR,2BAA2B;IAC3B,aAAa;IACb,uBAAuB;IACvB,4DAA4D;IAC5D,yBAAyB;IACzB,yBAAyB;IACzB,qBAAqB;IACrB,mBAAmB;IACnB,YAAY;IACZ,UAAU;IACV,0CAA0C;IAC1C,wCAAwC;IACxC,SAAS;IACT,gBAAgB;IAChB,oCAAoC;IACpC,+BAA+B;IAC/B,iCAAiC;IACjC,6BAA6B;IAC7B,yBAAyB;IACzB,UAAU;IACV,SAAS;IACT,OAAO;IACP,MAAM;IACN,MAAM;IAEN,qBAAO;AACR;KAlCgB"}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 918, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/redux/store.ts"],"sourcesContent":["\"use client\";\r\nimport { userSlice } from \"./slices/user\";\r\nimport { postSlice } from \"./slices/post\";\r\nimport { postApi } from \"./api-slices/post\";\r\nimport { usersApi } from \"./api-slices/user\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst store = configureStore({\r\n\treducer: {\r\n\t\tUser: userSlice.reducer,\r\n\t\tPost: postSlice.reducer,\r\n\t\t[usersApi.reducerPath]: usersApi.reducer,\r\n\t\t[postApi.reducerPath]: postApi.reducer,\r\n\t},\r\n\tmiddleware: (defaultMiddleware) =>\r\n\t\tdefaultMiddleware().concat(postApi.middleware).concat(usersApi.middleware),\r\n});\r\nexport { store };\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAC5B,SAAS;QACR,MAAM,2IAAA,CAAA,YAAS,CAAC,OAAO;QACvB,MAAM,2IAAA,CAAA,YAAS,CAAC,OAAO;QACvB,CAAC,kJAAA,CAAA,WAAQ,CAAC,WAAW,CAAC,EAAE,kJAAA,CAAA,WAAQ,CAAC,OAAO;QACxC,CAAC,kJAAA,CAAA,UAAO,CAAC,WAAW,CAAC,EAAE,kJAAA,CAAA,UAAO,CAAC,OAAO;IACvC;IACA,YAAY,CAAC,oBACZ,oBAAoB,MAAM,CAAC,kJAAA,CAAA,UAAO,CAAC,UAAU,EAAE,MAAM,CAAC,kJAAA,CAAA,WAAQ,CAAC,UAAU;AAC3E"}},
    {"offset": {"line": 945, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Play%20Ground/Web%20Dev/NEXT%20JS/projects/chat-along/src/redux/ReduxProvider.tsx"],"sourcesContent":["\"use client\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\ninterface ReduxProviderProps {\r\n\tchildren: React.ReactNode;\r\n}\r\nexport const ReduxProvider = ({ children }: ReduxProviderProps) => {\r\n\treturn <Provider store={store}> {children}</Provider>;\r\n};\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAOO,MAAM,gBAAgB,CAAC,EAAE,QAAQ,EAAsB;IAC7D,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;;YAAE;YAAE;;;;;;;AAClC;KAFa"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}